=== 无密码登录

==== linux
.无密码登录设置
[source, bash]
----
#生成不带密码的密钥对
ssh-keygen -N "" -f ~/.ssh/mk

#上传公钥文件到远程主机
ssh-copy-id -i ~/.ssh/mk.pub root@192.168.2.236

#在本地Linux终端中配置私钥
cat << EOF >> ~/.ssh/config
Host 192.168.2.236
    IdentityFile ~/.ssh/mk
EOF
----

[NOTE]
如果是在gitlab中添加ssh公钥，则在克隆时必须在本地添加域名解析

==== windows

.生成密钥
[source, bash]
ssh-keygen -t rsa -f C:\Users\$env:USERNAME\.ssh\keyname

一路回车直到出现

----
SHA256:0TJsTFwaSSiX5q4oUtZhYyscvwQ4fA7Ou2h6rKiAzdo chengzenghuan@chengzenghuan-windows10
The key's randomart image is:
+---[RSA 3072]----+
|       =+o.      |
|    . =+o+       |
|..   =  O .      |
|ooo.= .. +       |
|oo+B =  S        |
|.==.= .          |
|o+++ o           |
|*=+ o            |
|%=E              |
+----[SHA256]-----+
----

[NOTE]
====
下面命令需要更改192.168.2.236为你的远程主机的ip
====
[source, bash]
----
echo "Host 192.168.2.236" >>C:\Users\$env:USERNAME\.ssh\config
echo "    IdentityFile C:\Users\$env:USERNAME\.ssh\czh" >>C:\Users\$env:USERNAME\.ssh\config
----

[NOTE]
====
下面命令需要更改user@192.168.2.236为你的远程主机中要登录的用户和主机Ip
====

.将公钥上传到远程主机
[source, bash]
----
cat C:\Users\$env:USERNAME\.ssh\keyname.pub | ssh user@192.168.2.236 "cat >> ~/.ssh/authorized_keys"
----

.进行无密码登录
[source, bash]
ssh user@192.168.2.236

=== ssh密钥对克隆git仓库

.生成密钥对
[source, bash]
----
mkdir -p ~/.ssh
#一路回车直到生成
ssh-keygen -t rsa -b 4096 -C "chengzenghuan2018@gmail.com" -f ~/.ssh/keyname
----
参数说明::
* -t rsa 指定密钥对类型为RSA，
* -b 4096 指定密钥长度为4096位，
* -C "chengzenghuan@github.com" 注释该密钥对相关联的电子邮件地址（公钥文件末尾会出现该注释）
* -f ~/.ssh/keyname 指定密钥文件的名称和路径。
* -N "" 指定空密码

[NOTE]
将公钥keyname.pub添加到github后再执行之后的操作

.配置ssh
[source, bash]
----
cat <<EOF >> ~/.ssh/config
Host github.com
    HostName github.com
    User git
    IdentityFile ~/.ssh/keyname
    IdentitiesOnly yes
EOF


#测试是否成功添加
ssh -T git@github.com
----

.终端输出
----
Hi xxxxx! You've successfully authenticated, but GitHub does not provide shell access.
----

[NOTE]
====
如果报错：
----
ssh: connect to host github.com port 22: Connection refused
----
则使用GitHub的443端口————执行以下命令以更改~/.ssh/config文件：
[source, bash]
----
cat <<EOF >> ~/.ssh/config
Host github.com
    HostName ssh.github.com
    Port 443
    User git
    IdentityFile ~/.ssh/keyname
    IdentitiesOnly yes
EOF
----

再次测试是否成功添加
[source, bash]
ssh -T git@github.com

成功后，终端输出
----
Hi xxxxx! You've successfully authenticated, but GitHub does not provide shell access.
----

====












