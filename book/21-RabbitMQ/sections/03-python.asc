=== RabbiMQ使用

==== RabbitMQ cli 

rabbitmqctl consume my_queue
rabbitmqctl publish my_queue "Hello World!"


==== python

.环境准备
[source, bash]
pip3 install pika

.receive.py脚本文件
[source, bash]
----
cat << EOF > receive.py
import pika

credentials = pika.PlainCredentials('myuser','2a55f70a841f18b97c3a7db939b7adc9e34a0f1b')
connection = pika.BlockingConnection(pika.ConnectionParameters(
    'localhost',5672,'qa1',credentials))
channel = connection.channel()

channel.queue_declare(queue='balance')


def callback(ch, method, properties, body):
    print(" [x] Received %r" % body)

channel.basic_consume(queue='balance',
                      auto_ack=False,
                      on_message_callback=callback)

print(' [*] Waiting for messages. To exit press CTRL+C')
channel.start_consuming()

EOF
----

.send.py脚本文件
[source, bash]
----
cat << EOF > send.py
#!/usr/bin/env python
import pika

auth = pika.PlainCredentials("myuser","2a55f70a841f18b97c3a7db939b7adc9e34a0f1b")
connect = pika.BlockingConnection(pika.ConnectionParameters("localhost", port=5672, virtual_host='qa1', credentials=auth))
# connection = pika.BlockingConnection(pika.ConnectionParameters(host='RabbitMQ',virtual_host='/', credentials='username'))
channel = connect.channel()

# connection = pika.BlockingConnection(pika.ConnectionParameters('localhost'))
# chan.nel = connection.channel()
channel.queue_declare(queue='balance')
channel.basic_publish(exchange='',
                      routing_key='balance',
                      body='Hello World!')
print(" [x] Sent 'Hello World!'")
connect.close()
EOF
----

.执行receive.py
[source, bash]
python3 receive.py

.终端输出
----
[*] Waiting for messages. To exit press CTRL+C
----


打开另一个终端

.执行send.py
[source, bash]
python3 send.py

.终端输出
----
 [x] Sent 'Hello World!'
----

回到执行receive.py的终端，可看到
----
[*] Waiting for messages. To exit press CTRL+C
[x] Received b'Hello World!'
----
