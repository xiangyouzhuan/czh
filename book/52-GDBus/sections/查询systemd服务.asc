=== 查询systemd服务

==== 获取服务的路径

[source, bash]
----
gdbus call \
    --system \
    --dest org.freedesktop.systemd1 \
    --object-path /org/freedesktop/systemd1 \
    --method org.freedesktop.systemd1.Manager.GetUnit \
    nginx.service
----

----
(objectpath '/org/freedesktop/systemd1/unit/nginx_2eservice',)
----

==== 查看服务的结构

[source, bash]
----
gdbus introspect \
    --system \
    --dest org.freedesktop.systemd1 \
    --object-path /org/freedesktop/systemd1/unit/nginx_2eservice
----

----
node /org/freedesktop/systemd1/unit/nginx_2eservice {
    interface org.freedesktop.DBus.Peer {
        methods:
        Ping();
        GetMachineId(out s machine_uuid);
        signals:
        properties:
    };
    interface org.freedesktop.DBus.Introspectable {
        methods:
        Introspect(out s data);
        signals:
        properties:
    };
    interface org.freedesktop.DBus.Properties {
        methods:
        Get(in  s interface,
            in  s property,
            out v value);
        GetAll(in  s interface,
                out a{sv} properties);
        Set(in  s interface,
            in  s property,
            in  v value);
        signals:
        PropertiesChanged(s interface,
                            a{sv} changed_properties,
                            as invalidated_properties);
        properties:
    };
    interface org.freedesktop.systemd1.Service {
        methods:
        signals:
        properties:
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s Type = 'forking';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s Restart = 'no';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s PIDFile = '/var/run/nginx.pid';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s NotifyAccess = 'none';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t RestartUSec = 100000;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t TimeoutStartUSec = 90000000;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t TimeoutStopUSec = 90000000;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t WatchdogUSec = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly t WatchdogTimestamp = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly t WatchdogTimestampMonotonic = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t StartLimitInterval = 10000000;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly u StartLimitBurst = 5;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s StartLimitAction = 'none';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s RebootArgument = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s FailureAction = 'none';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b PermissionsStartOnly = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b RootDirectoryStartOnly = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b RemainAfterExit = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b GuessMainPID = true;
        readonly u MainPID = 4004;
        readonly u ControlPID = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s BusName = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly u FileDescriptorStoreMax = 0;
        readonly s StatusText = '';
        readonly i StatusErrno = 0;
        readonly s Result = 'success';
        readonly t ExecMainStartTimestamp = 1659535912878815;
        readonly t ExecMainStartTimestampMonotonic = 38023850867183;
        readonly t ExecMainExitTimestamp = 0;
        readonly t ExecMainExitTimestampMonotonic = 0;
        readonly u ExecMainPID = 4004;
        readonly i ExecMainCode = 0;
        readonly i ExecMainStatus = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("invalidates")
        readonly a(sasbttttuii) ExecStartPre = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("invalidates")
        readonly a(sasbttttuii) ExecStart = [('/usr/sbin/nginx', ['/usr/sbin/nginx', '-c', '/etc/nginx/nginx.conf'], false, 0, 0, 0, 0, 0, 0, 0)];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("invalidates")
        readonly a(sasbttttuii) ExecStartPost = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("invalidates")
        readonly a(sasbttttuii) ExecReload = [('/bin/sh', ['/bin/sh', '-c', '/bin/kill -s HUP $(/bin/cat /var/run/nginx.pid)'], false, 1671120010187312, 49607948175679, 1671120010194762, 49607948183129, 5110, 1, 0)];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("invalidates")
        readonly a(sasbttttuii) ExecStop = [('/bin/sh', ['/bin/sh', '-c', '/bin/kill -s TERM $(/bin/cat /var/run/nginx.pid)'], false, 0, 0, 0, 0, 0, 0, 0)];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("invalidates")
        readonly a(sasbttttuii) ExecStopPost = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly s Slice = 'system.slice';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly s ControlGroup = '/system.slice/nginx.service';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly t MemoryCurrent = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly t TasksCurrent = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly b Delegate = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly b CPUAccounting = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly t CPUShares = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly t StartupCPUShares = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly t CPUQuotaPerSecUSec = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly b BlockIOAccounting = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly t BlockIOWeight = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly t StartupBlockIOWeight = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly a(st) BlockIODeviceWeight = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly a(st) BlockIOReadBandwidth = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly a(st) BlockIOWriteBandwidth = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly b MemoryAccounting = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly t MemoryLimit = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly s DevicePolicy = 'auto';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly a(ss) DeviceAllow = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly b TasksAccounting = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly t TasksMax = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as Environment = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly a(sb) EnvironmentFiles = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as PassEnvironment = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly u UMask = 18;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitCPU = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitFSIZE = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitDATA = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitSTACK = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitCORE = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitRSS = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitNOFILE = 4096;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitAS = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitNPROC = 3881;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitMEMLOCK = 65536;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitLOCKS = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitSIGPENDING = 3881;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitMSGQUEUE = 819200;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitNICE = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitRTPRIO = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t LimitRTTIME = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s WorkingDirectory = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s RootDirectory = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly i OOMScoreAdjust = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly i Nice = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly i IOScheduling = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly i CPUSchedulingPolicy = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly i CPUSchedulingPriority = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly ay CPUAffinity = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t TimerSlackNSec = 50000;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b CPUSchedulingResetOnFork = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b NonBlocking = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s StandardInput = 'null';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s StandardOutput = 'journal';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s StandardError = 'inherit';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s TTYPath = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b TTYReset = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b TTYVHangup = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b TTYVTDisallocate = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly i SyslogPriority = 30;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s SyslogIdentifier = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b SyslogLevelPrefix = true;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s Capabilities = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly i SecureBits = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t CapabilityBoundingSet = 18446744073709551615;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t AmbientCapabilities = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s User = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s Group = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as SupplementaryGroups = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s PAMName = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as ReadWriteDirectories = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as ReadOnlyDirectories = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as InaccessibleDirectories = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t MountFlags = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b PrivateTmp = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b PrivateNetwork = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b PrivateDevices = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s ProtectHome = 'no';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s ProtectSystem = 'no';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b SameProcessGroup = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s UtmpIdentifier = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly (bs) SELinuxContext = (false, '');
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly (bs) AppArmorProfile = (false, '');
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly (bs) SmackProcessLabel = (false, '');
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b IgnoreSIGPIPE = true;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b NoNewPrivileges = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly (bas) SystemCallFilter = (false, []);
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as SystemCallArchitectures = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly i SystemCallErrorNumber = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s Personality = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly (bas) RestrictAddressFamilies = (false, []);
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly u RuntimeDirectoryMode = 493;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as RuntimeDirectory = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s KillMode = 'control-group';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly i KillSignal = 15;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b SendSIGKILL = true;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b SendSIGHUP = false;
    };
    interface org.freedesktop.systemd1.Unit {
        methods:
        @org.freedesktop.systemd1.Privileged("true")
        Start(in  s arg_0,
                out o arg_1);
        @org.freedesktop.systemd1.Privileged("true")
        Stop(in  s arg_0,
                out o arg_1);
        @org.freedesktop.systemd1.Privileged("true")
        Reload(in  s arg_0,
                out o arg_1);
        @org.freedesktop.systemd1.Privileged("true")
        Restart(in  s arg_0,
                out o arg_1);
        @org.freedesktop.systemd1.Privileged("true")
        TryRestart(in  s arg_0,
                    out o arg_1);
        @org.freedesktop.systemd1.Privileged("true")
        ReloadOrRestart(in  s arg_0,
                        out o arg_1);
        @org.freedesktop.systemd1.Privileged("true")
        ReloadOrTryRestart(in  s arg_0,
                            out o arg_1);
        @org.freedesktop.systemd1.Privileged("true")
        Kill(in  s arg_0,
                in  i arg_1);
        @org.freedesktop.systemd1.Privileged("true")
        ResetFailed();
        @org.freedesktop.systemd1.Privileged("true")
        SetProperties(in  b arg_0,
                        in  a(sv) arg_1);
        signals:
        properties:
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s Id = 'nginx.service';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as Names = ['nginx.service'];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly s Following = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as Requires = ['basic.target'];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as RequiresOverridable = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as Requisite = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as RequisiteOverridable = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as Wants = ['network-online.target', 'system.slice'];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as BindsTo = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as PartOf = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as RequiredBy = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as RequiredByOverridable = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as WantedBy = ['multi-user.target'];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as BoundBy = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as ConsistsOf = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as Conflicts = ['shutdown.target'];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as ConflictedBy = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as Before = ['shutdown.target', 'multi-user.target'];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as After = ['nss-lookup.target', 'system.slice', 'basic.target', 'network-online.target', 'remote-fs.target', 'systemd-journald.socket'];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as OnFailure = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as Triggers = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as TriggeredBy = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as PropagatesReloadTo = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as ReloadPropagatedFrom = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as JoinsNamespaceOf = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as RequiresMountsFor = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as Documentation = ['http://nginx.org/en/docs/'];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s Description = 'nginx - high performance web server';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s LoadState = 'loaded';
        readonly s ActiveState = 'active';
        readonly s SubState = 'running';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s FragmentPath = '/usr/lib/systemd/system/nginx.service';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s SourcePath = '';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly as DropInPaths = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly s UnitFileState = 'enabled';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly s UnitFilePreset = 'disabled';
        readonly t InactiveExitTimestamp = 1659535911115630;
        readonly t InactiveExitTimestampMonotonic = 38023849103997;
        readonly t ActiveEnterTimestamp = 1659535912879687;
        readonly t ActiveEnterTimestampMonotonic = 38023850868055;
        readonly t ActiveExitTimestamp = 1659535911094161;
        readonly t ActiveExitTimestampMonotonic = 38023849082529;
        readonly t InactiveEnterTimestamp = 1659535911114628;
        readonly t InactiveEnterTimestampMonotonic = 38023849102996;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b CanStart = true;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b CanStop = true;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b CanReload = true;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b CanIsolate = false;
        readonly (uo) Job = (0, '/');
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b StopWhenUnneeded = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b RefuseManualStart = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b RefuseManualStop = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b AllowIsolate = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b DefaultDependencies = true;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s OnFailureJobMode = 'replace';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b IgnoreOnIsolate = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b IgnoreOnSnapshot = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b NeedDaemonReload = false;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly t JobTimeoutUSec = 0;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s JobTimeoutAction = 'none';
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly s JobTimeoutRebootArgument = '';
        readonly b ConditionResult = true;
        readonly b AssertResult = true;
        readonly t ConditionTimestamp = 1659535911115062;
        readonly t ConditionTimestampMonotonic = 38023849103430;
        readonly t AssertTimestamp = 1659535911115062;
        readonly t AssertTimestampMonotonic = 38023849103430;
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly a(sbbsi) Conditions = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("false")
        readonly a(sbbsi) Asserts = [];
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly (ss) LoadError = ('', '');
        @org.freedesktop.DBus.Property.EmitsChangedSignal("const")
        readonly b Transient = false;
    };
};
----

==== 获取服务的属性

[source, bash]
----
gdbus call \
    --system \
    --dest org.freedesktop.systemd1 \
    --object-path /org/freedesktop/systemd1/unit/nginx_2eservice \
    --method org.freedesktop.DBus.Properties.GetAll \
    org.freedesktop.systemd1.Unit
----

----
({
    'Id': <'nginx.service'>, 
    'Names': <['nginx.service']>, 
    'Following': <''>, 
    'Requires': <['basic.target']>, 
    'RequiresOverridable': <@as []>, 
    'Requisite': <@as []>, 
    'RequisiteOverridable': <@as []>, 
    'Wants': <['network-online.target', 'system.slice']>, 
    'BindsTo': <@as []>, 
    'PartOf': <@as []>, 
    'RequiredBy': <@as []>, 
    'RequiredByOverridable': <@as []>, 
    'WantedBy': <['multi-user.target']>, 
    'BoundBy': <@as []>, 
    'ConsistsOf': <@as []>, 
    'Conflicts': <['shutdown.target']>, 
    'ConflictedBy': <@as []>, 
    'Before': <['shutdown.target', 'multi-user.target']>, 
    'After': <['nss-lookup.target', 'system.slice', 'basic.target', 'network-online.target', 'remote-fs.target', 'systemd-journald.socket']>, 
    'OnFailure': <@as []>, 
    'Triggers': <@as []>, 
    'TriggeredBy': <@as []>, 
    'PropagatesReloadTo': <@as []>, 
    'ReloadPropagatedFrom': <@as []>, 
    'JoinsNamespaceOf': <@as []>, 
    'RequiresMountsFor': <@as []>, 
    'Documentation': <['http://nginx.org/en/docs/']>, 
    'Description': <'nginx - high performance web server'>, 
    'LoadState': <'loaded'>, 
    'ActiveState': <'active'>, 
    'SubState': <'running'>, 
    'FragmentPath': <'/usr/lib/systemd/system/nginx.service'>, 
    'SourcePath': <''>, 
    'DropInPaths': <@as []>, 
    'UnitFileState': <'enabled'>, 
    'UnitFilePreset': <'disabled'>, 
    'InactiveExitTimestamp': <uint64 1659535911115630>, 
    'InactiveExitTimestampMonotonic': <uint64 38023849103997>, 
    'ActiveEnterTimestamp': <uint64 1659535912879687>, 
    'ActiveEnterTimestampMonotonic': <uint64 38023850868055>, 
    'ActiveExitTimestamp': <uint64 1659535911094161>, 
    'ActiveExitTimestampMonotonic': <uint64 38023849082529>, 
    'InactiveEnterTimestamp': <uint64 1659535911114628>, 
    'InactiveEnterTimestampMonotonic': <uint64 38023849102996>, 
    'CanStart': <true>, 
    'CanStop': <true>, 
    'CanReload': <true>, 
    'CanIsolate': <false>, 
    'Job': <(uint32 0, objectpath '/')>, 
    'StopWhenUnneeded': <false>, 
    'RefuseManualStart': <false>, 
    'RefuseManualStop': <false>, 
    'AllowIsolate': <false>, 
    'DefaultDependencies': <true>, 
    'OnFailureJobMode': <'replace'>, 
    'IgnoreOnIsolate': <false>, 
    'IgnoreOnSnapshot': <false>, 
    'NeedDaemonReload': <false>, 
    'JobTimeoutUSec': <uint64 0>, 
    'JobTimeoutAction': <'none'>, 
    'JobTimeoutRebootArgument': <''>, 
    'ConditionResult': <true>, 
    'AssertResult': <true>, 
    'ConditionTimestamp': <uint64 1659535911115062>, 
    'ConditionTimestampMonotonic': <uint64 38023849103430>, 
    'AssertTimestamp': <uint64 1659535911115062>, 
    'AssertTimestampMonotonic': <uint64 38023849103430>, 
    'Conditions': <@a(sbbsi) []>, 
    'Asserts': <@a(sbbsi) []>, 
    'LoadError': <('', '')>, 
    'Transient': <false>
},)
----

==== 获取服务状态

[source, bash]
----
gdbus call \
    --system \
    --dest org.freedesktop.systemd1 \
    --object-path /org/freedesktop/systemd1/unit/nginx_2eservice \
    --method org.freedesktop.DBus.Properties.Get \
    org.freedesktop.systemd1.Unit ActiveState
----

----
(<'active'>,)
----
