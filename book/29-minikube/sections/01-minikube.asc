=== minikube安装和使用
* 环境准备
** 2 CPUs
** 4GB 内存
** 20GB 可用磁盘空间


1.安装minikube
[source, bash]
----
mkdir /root/downloads
cd /root/downloads
curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-latest.x86_64.rpm
sudo rpm -Uvh minikube-latest.x86_64.rpm
----

2.安装docker

参考本文<<_chapter_docker>>

3.添加用户，并将新用户加入docker用户组
[source, bash]
----
adduser czh 
passwd czh
echo 'czh   ALL=(ALL) ALL' >> /etc/sudoers
su czh
sudo usermod -aG docker $USER && newgrp docker
----

4.设置环境变量以使用代理

你只需要变更HTTP_PROXY、HTTPS_PROXY以及http_proxy、https_proxy环境变量即可，no_proxy不用改。代理服务器以你的代理服务器地址为准。
[source, bash]
----
export HTTP_PROXY=http://10.88.33.166:6666
export HTTPS_PROXY=http://10.88.33.166:6668
export NO_PROXY=localhost,127.0.0.1,10.96.0.0/12,192.168.59.0/24,192.168.49.0/24,192.168.39.0/24

export http_proxy=http://10.88.33.166:6666
export https_proxy=http://10.88.33.166:6668
export no_proxy=localhost,127.0.0.1,10.96.0.0/12,192.168.59.0/24,192.168.49.0/24,192.168.39.0/24
----

5.使用docker driver启动集群:
[source, bash]
----
minikube start --driver=docker
----

.终端输出类似以下内容
----
[czh@K8S-1 root]$ minikube start --driver=docker
😄  minikube v1.31.2 on Centos 9 (kvm/amd64)
✨  Using the docker driver based on user configuration
📌  Using Docker driver with root privileges
👍  Starting control plane node minikube in cluster minikube
🚜  Pulling base image ...
💾  Downloading Kubernetes v1.27.4 preload ...
    > preloaded-images-k8s-v18-v1...:  393.21 MiB / 393.21 MiB  100.00% 25.86 M
    > index.docker.io/kicbase/sta...:  447.62 MiB / 447.62 MiB  100.00% 3.98 Mi
❗  minikube was unable to download gcr.io/k8s-minikube/kicbase:v0.0.40, but successfully downloaded docker.io/kicbase/stable:v0.0.40 as a fallback image
🔥  Creating docker container (CPUs=2, Memory=2200MB) ...
🐳  Preparing Kubernetes v1.27.4 on Docker 24.0.4 ...
    ▪ Generating certificates and keys ...
    ▪ Booting up control plane ...
    ▪ Configuring RBAC rules ...
🔗  Configuring bridge CNI (Container Networking Interface) ...
🔎  Verifying Kubernetes components...
    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
🌟  Enabled addons: storage-provisioner, default-storageclass
💡  kubectl not found. If you need it, try: 'minikube kubectl -- get pods -A'
🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default
----

设置docker为默认driver:
[source, bash]
----
minikube config set driver docker
----

6.配置minikube内的docker daemon使用代理

(1)进入minikube容器
[source, bash]
----
minikube ssh
----

(2)编辑/etc/docker/daemon.json,添加以下代理配置
[source, bash]
----
"proxies":{
    "http-proxy": "http://10.88.33.166:6666",
    "https-proxy": "http://10.88.33.166:6668",
    "no-proxy": "localhost,127.0.0.1,10.96.0.0/12,192.168.59.0/24,192.168.49.0/24,192.168.39.0/24"}
----

(3)重新启动docker服务
[source, bash]
----
sudo systemctl restart docker
----

(4)退出minikube容器
[source, bash]
ctrl+d


7.kubectl安装
[source, bash]
----
#添加kubectl仓库
cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
EOF

#安装kubectl
sudo yum install -y kubectl

#拉取镜像，并将镜像load进minikube
#这一步针对国内不能正常下载k8s镜像的场景，如果网络可以正常访问dockerhub或者配置了代理，可以跳过这一步
docker pull kicbase/echo-server:1.0
minikube image load kicbase/echo-server:1.0
----

8.创建一个pod
(1)查看当前集群状态
[source, bash]
----
kubectl cluster-info
----

.终端输出
----
[czh@localhost ~]$ kubectl cluster-info
Kubernetes control plane is running at https://192.168.49.2:8443
CoreDNS is running at https://192.168.49.2:8443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
----

(2)查看当前集群中的pods
[source, bash]
----
kubectl get pods
----

(3)创建一个sample,并开放8080端口:
[source, bash]
----
kubectl create deployment hello-minikube --image=kicbase/echo-server:1.0
kubectl expose deployment hello-minikube --type=NodePort --port=8080
----

(4)查看hello-minikube服务
[source, bash]
----
kubectl get services hello-minikube
----

(5)使用minikube启动一个web browser
[source, bash]
----
kubectl port-forward service/hello-minikube 7080:8080 --address 0.0.0.0
----

.终端输出
----
Forwarding from 0.0.0.0:7080 -> 8080
Handling connection for 7080
Handling connection for 7080
Handling connection for 7080

----

在另一个终端执行
[source, bash]
----
curl -I http://localhost:7080/
----

.终端输出
----
HTTP/1.1 200 OK
Content-Type: text/plain
Date: Thu, 02 Nov 2023 09:18:38 GMT
Content-Length: 131
----


浏览器访问http://搭建minikube的主机ip:7080/  （如果你在虚拟机上运行的话，别忘了关闭虚拟机的防火墙或者配置防火墙规则）

image::minikube_install_01.png[]

