==== 将数据装入表中

创建表后，需要填入内容。通过LOAD DATA和INSERT语句可以完成该任务。
假定你的宠物记录如下：

|===
|name|owner|species|sex|birth|death 
|Fluffy|Harold|cat|f|1993-02-04| 
|Claws|Gwen|cat|m|1994-03-17| 
|Buffy|Harold|dog|f|1989-05-13| 
|Fang|Benny|dog|m|1990-08-27| 
|Bowser|Diane|dog|m|1979-08-31|1995-07-29
|Chirpy|Gwen|bird|f|1998-09-11| 
|Whistler|Gwen|bird||1997-12-09|
|Slim|Benny|snake|m|1996-04-29|
|===

因为你是从一个空表开始的，填充它的一个简易方法是创建一个文本文件，每个动物各一行，然后用一个语句将文件的内容装载到表中。

你可以创建一个文本文件“pet.txt”，每行包含一个记录，用定位符(tab)把值分开，并且以CREATE TABLE语句中列出的列次序给出。对于丢失的值(例如未知的性别，或仍然活着的动物的死亡日期)，你可以使用NULL值。为了在你的文本文件中表示这些内容，使用\N（反斜线，字母N）。例如，Whistler鸟的记录应为(这里值之间的空白是一个定位符)：

|===
|name|owner|species|sex|birth|death
|Whistler|Gwen|bird|\N|1997-12-09|\N|
|===

.此命令是追加到数据库后面
[source, bash]
LOAD DATA LOCAL INFILE '/root/pet.txt' INTO TABLE pet;

[IMPORTANT]
====
如果遇到以下问题：
----
`Loading local data is disabled; this must be enabled on both the 
client and server side`
----

.先退出当前登录
[source, bash]
\q

.登录MySQL Server，通常是root为超级管理员
[source, bash]
mysql -u root -p

.设置local_infile参数为1
[source, bash]
SET GLOBAL local_infile=1;

.再退出当前登录
[source, bash]
\q

.使用参数--local-infile=1登录对应用户user。
[source, bash]
mysql --local-infile=1 -u root -p

.之后再执行
[source, bash]
LOAD DATA LOCAL INFILE '/root/pet.txt' INTO TABLE pet;
====

[NOTE]
====
请注意如果用Windows中的编辑器（使用\r\n做为行的结束符）创建文件，应使用：

[source, bash]
----
mysql> LOAD DATA LOCAL INFILE '/root/pet.txt' INTO TABLE pet
     LINES TERMINATED BY '\r\n';
----
====

如果想要一次增加一个新记录，可以使用INSERT语句。最简单的形式是，提供每一列的值，其顺序与CREATE TABLE语句中列的顺序相同。假定Diane把一只新仓鼠命名为Puffball，你可以使用下面的INSERT语句添加一条新记录：

[source, bash]
----
mysql> INSERT INTO pet
       VALUES ('Puffball','Diane','hamster','f','1999-03-30',NULL);
----







