=== Prometheus

Reference： https://prometheus.io/docs/prometheus/latest/getting_started/#starting-up-some-sample-targets

浏览器下载地址： https://prometheus.io/download/#prometheus



.Download Prometheus
[source, bash]
cd ~
wget https://github.com/prometheus/prometheus/releases/download/v2.49.1/prometheus-2.49.1.linux-amd64.tar.gz
tar -zxvf prometheus-2.49.1.linux-amd64.tar.gz -C /opt/
cd /opt/prometheus-*

执行下面命令检测是否可以正常使用
[source, bash]
----
./prometheus --help
----

.Configuring Prometheus to monitor itself

https://prometheus.io/docs/prometheus/latest/configuration/configuration/[prometheus.yml配置官方教程]

抓取和监控prometheus自身的健康状况。

.编写配置文件prometheus.yml
[source, bash]
----
cat << EOF > prometheus.yml
global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'codelab-monitor'

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label 'job=<job_name>' to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
      - targets: ['localhost:9090']
EOF
----

.Starting Prometheus
[source, bash]
----
./prometheus --config.file=prometheus.yml
----

访问 http://<部署prometheus的主机ip>:9090

在搜索框中输入
[source, bash]
----
prometheus_target_interval_length_seconds
----

点击‘Execute’，正常情况应该返回许多不同的时间序列

image::prometheus_01.png[]

.常用命令
[source, bash]
----
#重载prometheus配置文件
kill -s SIGHUP `pgrep -f prometheus`

#关闭prometheus
kill -s SIGTERM `pgrep -f prometheus`
----

