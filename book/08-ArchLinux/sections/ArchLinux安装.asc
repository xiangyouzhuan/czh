=== ArchLinux 安装

[IMPORTANT]
====
Arch Linux安装可以在启动镜像之后，通过SSH连接复制以下命令字符完成安装。步骤如下：

. `ip a` 查看IP地址；
. `systemctl start sshd` 启动SSH服务；
. `passwd` 修改启动镜像root用户密码；
.  使用任意SSH客户端软件，连接启动镜像IP地址的22端口即可。

如果是安装中途连接SSH的，请注意适时执行 `arch-chroot /mnt` 命令进入安装目标硬盘。否则，所有安装操作重启系统后无效（安装到了启动镜像中）。
====

==== 建立硬盘分区

[source, bash]
cfdisk

IMPORTANT: 按照本教程安装ArchLinux ，硬盘至少需要10G以上。

IMPORTANT: 如果使用UEFI启动方式，需要新建 `/dev/sda1` 容量200M，并且设置为启动分区，其余分区编号顺延。

创建主分区，此处以7G为例，实际情况至少10G：

image::archlinux_install_01.png[]
image::archlinux_install_02.png[]
image::archlinux_install_03.png[]
image::archlinux_install_04.png[]
image::archlinux_install_05.png[]

创建交换分区，容量1G：

image::archlinux_install_06.png[]
image::archlinux_install_07.png[]
image::archlinux_install_08.png[]
image::archlinux_install_09.png[]

保存修改并退出：

image::archlinux_install_10.png[]
image::archlinux_install_11.png[]
image::archlinux_install_12.png[]
image::archlinux_install_13.png[]

==== 格式化分区

格式化主分区：

[source, bash]
mkfs.ext4 /dev/sda1

格式化虚拟分区：

[source, bash]
----
mkswap /dev/sda2

swapon /dev/sda2
----


[IMPORTANT]
====
如果使用UEFI启动方式，并且 `/dev/sda1` 是容量200M的启动分区，需要执行以下步骤。

[source, bash]
----
pacman -Syy
pacman -S dosfstools
mkfs.fat -F32 /dev/sda1
----

====


==== 挂载分区

[source, bash]
mount /dev/sda1 /mnt

[IMPORTANT]
====
如果使用UEFI启动方式，并且 `/dev/sda1` 是容量200M的启动分区，需要执行以下步骤。

[source, bash]
----
mkdir -p /mnt/boot/efi
mount /dev/sda1 /mnt/boot/efi
----

====

==== 连接WIFI

请查看官方文档 https://wiki.archlinux.org/title/Iwd#iwctl


执行 `iwctl` 命令，进入iwd交互Shell：

[source, bash]
----
# 获得WIFI网卡名称 wlan0  和 WIFI硬件名称 phy0
device list

device wlan0 set-property Powered on
adapter phy0 set-property Powered on

# 不会有任何屏幕输出
station wlan0 scan

# 列表WIFI清单
station wlan0 get-networks

# 会提示输入连接密码，其中 GEEKCAMP_5G 是选择的WIFI SSID
station wlan0 connect GEEKCAMP_5G

# 查看WIFI连接
station  wlan0 show

# 退出iwd Shell
exit
----

测试网络连接：

[source, bash]
----
ping qq.com
----

==== 设置国内镜像源

[source, bash]
----
cat << EOF > /etc/pacman.d/mirrorlist
Server = https://mirrors.163.com/archlinux/\$repo/os/\$arch
EOF
----

==== 安装基础包

[source, bash]
pacstrap /mnt base

==== 开机挂载分区

[source, bash]
genfstab -U /mnt >> /mnt/etc/fstab

编辑 `/mnt/etc/fstab` 文件，确认分区信息无误。

==== 切换到全新 Arch Linux 系统

[source, bash]
arch-chroot /mnt

==== 设置国内镜像源

[source, bash]
----
cat << EOF > /etc/pacman.d/mirrorlist
Server = https://mirrors.163.com/archlinux/\$repo/os/\$arch
EOF
----

==== 安装vim

[source, bash]
----
pacman -S vim
----

==== 设置时区

[source, bash]
ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

==== 本地化语言支持

启用语言参数：

[source, bash]
----
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
echo "zh_CN.GB18030 GB18030" >> /etc/locale.gen
echo "zh_CN.GBK GBK" >> /etc/locale.gen
echo "zh_CN.UTF-8 UTF-8" >> /etc/locale.gen
echo "zh_CN GB2312" >> /etc/locale.gen
----

生成locale：

[source, bash]
locale-gen

设置系统默认语言：

[source, bash]
echo "LANG=en_US.UTF-8" > /etc/locale.conf

全局设置为英文，tty控制台不会乱码，新用户默认目录也是英文名称，方便使用。

新用户登录桌面后，自行找到控制面板中的 "`Region and Language`"（区域和语言）设置为 `汉语` 即可。设置后，如果提示更新目录名称为中文，请选择 "`保留旧的文件名`"，除非你想在终端经常打中文目录名称（累死你~~）。

==== 键盘布局

[source, bash]
echo "KEYMAP=us" > /etc/vconsole.conf

==== 设置主机名

[source, bash]
----
echo 'archlinux' > /etc/hostname
----

==== 本地网络配置

[source, bash]
----
echo '127.0.0.1 localhost' > /etc/hosts
# 添加主机名对应的设置
echo '127.0.0.1 archlinux' >> /etc/hosts
----

==== 设置root密码

[source, bash]
passwd

==== 创建用户

新增用户：

[source, bash]
useradd -m mk

设置用户密码：

[source, bash]
passwd mk

添加到sudo列表：

[source, bash]
----
pacman -S sudo

echo 'mk   ALL=(ALL) ALL' >> /etc/sudoers
----

==== 安装Grub引导

===== Windows+Linux双引导

[source, bash]
----
pacman -S grub os-prober ntfs-3g
sed -i 's/#GRUB_DISABLE_OS_PROBER=false/GRUB_DISABLE_OS_PROBER=false/g' /etc/default/grub
----

下次进入GNOME桌面后，执行 `grub-mkconfig -o ...` 命令就会自动将Windows系统加入到Grub启动菜单

===== 使用传统方式启动的BIOS

[source, bash]
----
pacman -S grub

grub-install --target=i386-pc --recheck /dev/sda

pacman -S linux linux-headers linux-lts linux-lts-headers

grub-mkconfig -o /boot/grub/grub.cfg
----

===== 使用UEFI启动的BIOS

对于使用 UEFI 启动的用户，请用以下方式安装和设置Grub引导：

[source, bash]
----
pacman -S grub efibootmgr

grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=arch

pacman -S linux linux-headers linux-lts linux-lts-headers

grub-mkconfig -o /boot/grub/grub.cfg
----

==== 安装桌面

[source, bash]
----
# 更新软件包索引
pacman -Syy

# 桌面环境
pacman -S gnome vim networkmanager

# WIFI驱动
pacman -S linux-firmware

# 拼音输入法
pacman -S ibus-sunpinyin sunpinyin sunpinyin-data

# 显卡驱动
pacman -S xf86-video-fbdev xf86-video-intel xf86-video-vesa xf86-video-ati xf86-video-amdgpu

# 汉字字体
pacman -S wqy-microhei wqy-zenhei

# 开机启动
systemctl enable NetworkManager
systemctl enable gdm
----

==== 重启

[source, bash]
----
exit

reboot
----

安装完成，重启进入Arch Linux系统。

==== 设置pacman

增加 `Arch Linux 中文社区仓库` 的腾讯镜像服务器：

[source, bash]
----
# 进入root
sudo -i

cat << EOF >> /etc/pacman.conf

[archlinuxcn]
Server = https://mirrors.cloud.tencent.com/archlinuxcn/\$arch
SigLevel = Optional TrustAll

EOF

exit
----

`Arch Linux 中文社区仓库` 包含深度QQ、深度TIM、WPS、Google Chrome浏览器、WPS等等不开源的软件。

==== 安装常用软件

在桌面打开终端，复制以下命令一次性安装：

[source, bash]
----
sudo pacman -Syy

sudo pacman -S archlinuxcn-keyring

sudo pacman -S gedit vim screen thunderbird thunderbird-i18n-zh-cn openssh bash-completion cmake git curl wget filezilla gcc make mlocate nginx ntp p7zip rsync virtualbox virtualbox-guest-iso virtualbox-host-dkms file-roller parted sshpass rdesktop qt5-base qt6-base fakeroot yay openssl wireshark-qt base-devel code gnome-terminal os-prober

yay -S google-chrome
----


==== 系统设置

在桌面打开终端，执行以下命令：

[source, bash]
----
# GNOME 桌面设置
gsettings set org.gnome.nautilus.preferences always-use-location-entry true
gsettings set org.gnome.nautilus.preferences default-sort-order name
gsettings set org.gtk.Settings.FileChooser sort-directories-first true
gsettings set org.gnome.desktop.interface clock-show-date true
gsettings set org.gnome.desktop.interface clock-show-seconds true
# Ctrl+Shift+Alt+R 录像时，30秒后自动结束。设置为0,不限制
gsettings set org.gnome.settings-daemon.plugins.media-keys max-screencast-length 0

# virtualbox 设置
sudo gpasswd -a root vboxusers
sudo gpasswd -a $USER vboxusers
# wireshark 设置
sudo gpasswd -a root wireshark
sudo gpasswd -a $USER wireshark
sudo grpunconv

# 开机启动
sudo systemctl enable systemd-timesyncd
sudo systemctl start systemd-timesyncd
sudo systemctl enable sshd
sudo systemctl mask tmp.mount
----

TIP: 默认不能使用 `root` 用户 SSH 连接 Arch Linux。请修改  `/etc/ssh/sshd_config` 中的 `PermitRootLogin` 为 `yes`。


===== gedit 编辑器设置

安装设置编辑器：

[source, bash]
sudo pacman -S dconf-editor

然后，在终端执行 `dconf-editor` 命令后，依次找到菜单 org.gnome.gedit.preferences.editor -> scheme -> cobalt，可以设置编辑器背景。

org.gnome.gedit.preferences.editor 中有许多其它设置，根据自己习惯自行设置。


==== FAQ

===== E495

* 禁用安全启动；
* 进入BIOS，设置： 
** `"Startup"` -> `"UEFI/Legacy Boot"` 为 `"UEFI Only"`；
** `"Startup"` -> `"UEFI/Legacy Boot"` -> `"CMS Support"` 为 `"yes"`；

如果不设置，安装Linux后显卡硬件不会被识别。在日志文件 `"Xorg.0.log"` 中会出现 `"(EE) open /dev/dri/card0: No such file or directory"` 的错误，无法进入桌面。


===== A485显卡驱动无法加载，导致桌面问题

* 禁用安全启动；
* 启用 `amdgpu` 驱动；

[source, bash]
----
sudo -i

cat << EOF > /etc/modprobe.d/amdgpu.conf
options amdgpu si_support=1
options amdgpu cik_support=1
EOF

cat << EOF > /etc/modprobe.d/radeon.conf
options radeon si_support=0
options radeon cik_support=0
EOF

mkinitcpio -P
----

重启后，验证：

`lspci -k | grep -A 3 -E "(VGA|3D)"`

.屏幕输出
----
06:00.0 VGA compatible controller: Advanced Micro Devices, Inc. [AMD/ATI] Raven Ridge [Radeon Vega Series / Radeon Vega Mobile Series] (rev d1)
	Subsystem: Lenovo Raven Ridge [Radeon Vega Series / Radeon Vega Mobile Series]
	Kernel driver in use: amdgpu
	Kernel modules: amdgpu
----

其中，`Kernel driver in use: amdgpu` 表示设置已经生效。

参考： https://wiki.archlinux.org/title/AMDGPU

