=== 安装使用

==== 安装certbot

[source, bash]
----
pip38 install certbot

ln -s /usr/local/python-3.8.1/bin/certbot /usr/local/bin/certbot
----

==== 申请方式一：DNS方式申请通配符域名证书

===== 申请通配符域名验证（一）

[source, bash]
certbot certonly  -d *.xxx.com --manual --preferred-challenges dns --server https://acme-v02.api.letsencrypt.org/directory

.操作过程
----
    Saving debug log to /var/log/letsencrypt/letsencrypt.log
    Plugins selected: Authenticator manual, Installer None
    Enter email address (used for urgent renewal and security notices) (Enter 'c' to
    cancel): xxxx@xxxxx.com

    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    Please read the Terms of Service at
    https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You must
    agree in order to register with the ACME server at
    https://acme-v02.api.letsencrypt.org/directory
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    (A)gree/(C)ancel: A

    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    Would you be willing to share your email address with the Electronic Frontier
    Foundation, a founding partner of the Let's Encrypt project and the non-profit
    organization that develops Certbot? We'd like to send you email about our work
    encrypting the web, EFF news, campaigns, and ways to support digital freedom.
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    (Y)es/(N)o: Y
    Obtaining a new certificate
    Performing the following challenges:
    dns-01 challenge for thopenapi.com

    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    NOTE: The IP of this machine will be publicly logged as having requested this
    certificate. If you're running certbot in manual mode on a machine that is not
    your server, please ensure you're okay with that.

    Are you OK with your IP being logged?
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    (Y)es/(N)o: Y

    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    Please deploy a DNS TXT record under the name
    _acme-challenge.thopenapi.com with the following value:

    1EfqEsqE3pbZqiJmxpHvEkM0XdUhvqW5w4lWb46zMjM

    Before continuing, verify the record is deployed.
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    Press Enter to Continue
----

===== 域名解析

登录域名管理面板，在新增域名解析记录，如下图所示：

image::add_dns_setting.png[]

效果如下：

image::dns_settings.png[]

查询TXT解析：

[source, bash]
dig _acme-challenge.thopenapi.com TXT

.dig命令查询结果
----
; <<>> DiG 9.16.2 <<>> _acme-challenge.thopenapi.com TXT
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 64914
;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0

;; QUESTION SECTION:
;_acme-challenge.thopenapi.com.	IN	TXT

;; ANSWER SECTION:
_acme-challenge.thopenapi.com. 596 IN	TXT	"1EfqEsqE3pbZqiJmxpHvEkM0XdUhvqW5w4lWb46zMjM"

;; Query time: 10 msec
;; SERVER: 223.5.5.5#53(223.5.5.5)
;; WHEN: 六 5月 02 14:59:39 CST 2020
;; MSG SIZE  rcvd: 103
----

===== 申请通配符域名验证（二）

域名解析完成后，在 `Press Enter to Continue` 处按 kbd:[Enter] 继续操作......

.继续操作过程
----
    Before continuing, verify the record is deployed.
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    Press Enter to Continue
    Waiting for verification...
    Cleaning up challenges

    IMPORTANT NOTES:
    - Congratulations! Your certificate and chain have been saved at:
    /etc/letsencrypt/live/thopenapi.com/fullchain.pem
    Your key file has been saved at:
    /etc/letsencrypt/live/thopenapi.com/privkey.pem
    Your cert will expire on 2020-07-31. To obtain a new or tweaked
    version of this certificate in the future, simply run certbot
    again. To non-interactively renew *all* of your certificates, run
    "certbot renew"
    - If you like Certbot, please consider supporting our work by:

    Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
    Donating to EFF:                    https://eff.org/donate-le
----

===== 生成交换密钥

[source, bash]
openssl dhparam -out /etc/letsencrypt/live/xxx.com/dhparam.pem 2048

==== 申请方式二：网站验证（仅单域名）

===== 修改 `www.xxx.com` Nginx配置

./etc/nginx/conf.d/www.xxx.com.conf
----
server {
    listen 80;
    server_name www.xxx.com;
    root /data/web/www.xxx.com;
    
    ......

    location ^~ /.well-known/acme-challenge/ {
       default_type "text/plain";
    }

    location = /.well-known/acme-challenge/ {
       return 404;
    }
}
----

.重载Nginx配置
[source,bash]
----
nginx -s reload
----

===== 申请单域名证书

[source, bash]
----
certbot certonly --email webmaster@xxx.com -w /date/web/www.xxx.com -d www.xxx.com
----

参数解释::
    /data/web/www.xxx.com::: _www.xxx.com.conf_ 中的 `root`
    www.xxx.com::: _www.xxx.com.conf_ 的 `server_name`

.操作过程
----
Saving debug log to /var/log/letsencrypt/letsencrypt.log

How would you like to authenticate with the ACME CA?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
1: Runs an HTTP server locally which serves the necessary validation files under
the /.well-known/acme-challenge/ request path. Suitable if there is no HTTP
server already running. HTTP challenge only (wildcards not supported).
(standalone)
2: Saves the necessary validation files to a .well-known/acme-challenge/
directory within the nominated webroot path. A seperate HTTP server must be
running and serving files from the webroot path. HTTP challenge only (wildcards
not supported). (webroot)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Select the appropriate number [1-2] then [enter] (press 'c' to cancel): 2

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Please read the Terms of Service at
https://letsencrypt.org/documents/LE-SA-v1.3-September-21-2022.pdf. You must
agree in order to register with the ACME server. Do you agree?
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(Y)es/(N)o: Y

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Would you be willing, once your first certificate is successfully issued, to
share your email address with the Electronic Frontier Foundation, a founding
partner of the Let's Encrypt project and the non-profit organization that
develops Certbot? We'd like to send you email about our work encrypting the web,
EFF news, campaigns, and ways to support digital freedom.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(Y)es/(N)o: Y
Account registered.
Requesting a certificate for www.xxx.com

Successfully received certificate.
Certificate is saved at: /etc/letsencrypt/live/www.xxx.com/fullchain.pem
Key is saved at:         /etc/letsencrypt/live/www.xxx.com/privkey.pem
This certificate expires on 2023-05-17.
These files will be updated when the certificate renews.

NEXT STEPS:
- The certificate will need to be renewed before it expires. Certbot can automatically renew the certificate in the background, but you may need to take steps to enable that functionality. See https://certbot.org/renewal-setup for instructions.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
If you like Certbot, please consider supporting our work by:
 * Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
 * Donating to EFF:                    https://eff.org/donate-le
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
----

===== 生成交换密钥
[source,bash]
----
openssl dhparam -out /etc/letsencrypt/live/www.xxx.com/dhparam.pem 2048
----

==== Nginx 配置

.通配符域名
----
server {
    listen 80;
    server_name *.xxx.com;

    location / {
        return 301 https://*.xxx.com;
    }

    location ^~ /.well-known/acme-challenge/ {
       default_type "text/plain";
    }

    location = /.well-known/acme-challenge/ {
       return 404;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name *.xxx.com;
    root /data/web/xxx.com;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/letsencrypt/live/xxx.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/xxx.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/letsencrypt/live/xxx.com/dhparam.pem;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;
    # nginx: Specifies a file with trusted CA certificates in the PEM format used to verify client certificates and OCSP responses if ssl_stapling is enabled.
    # certbot: If you’re using OCSP stapling with Nginx >= 1.3.7, chain.pem should be provided as the ssl_trusted_certificate to validate OCSP responses.
    ssl_trusted_certificate /etc/letsencrypt/live/xxx.com/chain.pem;


    location ~ ^/\.git/? {
        return 404;
    }
}
----

[NOTE]
====
单域名Nginx配置::
    * 只需要将上文的 `*.xxx.com` 替换为 `www.xxx.com`
    * `/etc/letsencrypt/live/xxx.com/` 替换为 `/etc/letsencrypt/live/www.xxx.com/`
====

.重载Nginx配置
[source, bash]
----
nginx -s reload
----

安全级别测试：

https://www.ssllabs.com/ssltest/


==== 自动续签

===== 创建续签系统服务

.通配符域名
[source, bash]
----
cat << EOF > /etc/systemd/system/letsencrypt.service
[Unit]
Description=Let's Encrypt renewal

[Service]
Type=oneshot
# ExecStart=/usr/local/bin/certbot renew 

# 自动修改阿里云域名解析，完成证书续签
ExecStart=/usr/local/bin/certbot renew --manual --preferred-challenges=dns --manual-auth-hook '/data/LetsEncryptAliDnsTool/app.py --auth' --manual-cleanup-hook '/data/LetsEncryptAliDnsTool/app.py --cleanup'

ExecStartPost=/usr/sbin/nginx -s reload 

[Install]
WantedBy=multi-user.target
EOF
----

.单域名
[source,bash]
----
cat << EOF > /etc/systemd/system/letsencrypt.service
[Unit]
Description=Let's Encrypt renewal

[Service]
Type=oneshot
ExecStart=/usr/local/bin/certbot renew  
ExecStartPost=/usr/sbin/nginx -s reload 

[Install]
WantedBy=multi-user.target
EOF
----


===== 创建续签定时器

[source, bash]
----
cat << EOF > /etc/systemd/system/letsencrypt.timer
[Unit]
Description=Monthly renewal of Let's Encrypt's certificates

[Timer]
OnCalendar=daily  
Persistent=true

[Install]
WantedBy=timers.target
EOF
----

===== 重载系统服务
[source,bash]
----
systemctl daemon-reload
----

===== 设置开机启动

[source, bash]
----
systemctl enable letsencrypt.service
systemctl enable letsencrypt.timer
----

===== 启动定时器

[source, bash]
----
systemctl start letsencrypt.timer
----

===== 查看定时器

[source, bash]
----
systemctl list-timers letsencrypt.timer
----

